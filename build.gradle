// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply plugin: 'com.github.ben-manes.versions'

buildscript {
    ext.kotlin_version = "1.5.30"
    ext.hilt_version = "2.40.5"
    ext.jacocoVersion = '0.8.7'
    ext.detektVersion = '1.19.0'
    ext.pluginVersionsGradle = '0.42.0'

    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:7.0.2"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.5.20"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
        classpath "com.google.dagger:hilt-android-gradle-plugin:$hilt_version"
        classpath "org.jacoco:org.jacoco.core:$jacocoVersion"
        classpath "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:$detektVersion"
        classpath "org.cqfn.diktat:diktat-gradle-plugin:1.0.2"
        classpath "com.diffplug.spotless:spotless-plugin-gradle:4.5.1"

        classpath "com.github.ben-manes:gradle-versions-plugin:$pluginVersionsGradle"
    }
    apply from: project.rootProject.file("keys.gradle")
    apply from: "$project.rootDir/spotless.gradle"
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}
tasks.named("dependencyUpdates").configure {
    gradleReleaseChannel = 'current'
    rejectVersionIf {
        isNonStable(it.candidate.version) && !isNonStable(it.currentVersion)
    }
}
